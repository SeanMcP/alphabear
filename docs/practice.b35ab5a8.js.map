{"mappings":"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","sources":["node_modules/party-js/lib/index.js","node_modules/party-js/lib/scene.js","node_modules/party-js/lib/debug.js","node_modules/party-js/lib/containers.js","node_modules/party-js/lib/settings.js","node_modules/party-js/lib/util/index.js","node_modules/party-js/lib/util/config.js","node_modules/party-js/lib/util/rotation.js","node_modules/party-js/lib/components/index.js","node_modules/party-js/lib/components/circle.js","node_modules/party-js/lib/components/color.js","node_modules/party-js/lib/systems/math.js","node_modules/party-js/lib/components/gradient.js","node_modules/party-js/lib/components/spline.js","node_modules/party-js/lib/components/numericSpline.js","node_modules/party-js/lib/components/rect.js","node_modules/party-js/lib/components/vector.js","node_modules/party-js/lib/util/rules.js","node_modules/party-js/lib/util/lazy.js","node_modules/party-js/lib/particles/emitter.js","node_modules/party-js/lib/systems/variation.js","node_modules/party-js/lib/systems/random.js","node_modules/party-js/lib/particles/options/index.js","node_modules/party-js/lib/particles/options/emitterOptions.js","node_modules/party-js/lib/particles/options/emissionOptions.js","node_modules/party-js/lib/systems/sources.js","node_modules/party-js/lib/particles/options/renderOptions.js","node_modules/party-js/lib/particles/particle.js","node_modules/party-js/lib/particles/renderer.js","node_modules/party-js/lib/systems/shapes.js","node_modules/party-js/lib/templates/index.js","node_modules/party-js/lib/templates/confetti.js","node_modules/party-js/lib/systems/modules.js","node_modules/party-js/lib/templates/sparkles.js","src/practice.ts","src/helpers.ts"],"sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = exports.forceInit = exports.util = exports.math = exports.random = exports.sources = exports.variation = exports.Emitter = exports.Particle = exports.settings = exports.scene = void 0;\r\nvar scene_1 = require(\"./scene\");\r\nvar util_1 = require(\"./util\");\r\n__exportStar(require(\"./components\"), exports);\r\n__exportStar(require(\"./templates\"), exports);\r\n__exportStar(require(\"./systems/shapes\"), exports);\r\n__exportStar(require(\"./systems/modules\"), exports);\r\n// Create the lazy-initializing scene.\r\nexports.scene = new util_1.Lazy(function () {\r\n    // The library requires the use of the DOM, hence it cannot run in non-browser environments.\r\n    if (typeof document === \"undefined\" || typeof window === \"undefined\") {\r\n        throw new Error(\"It seems like you are trying to run party.js in a non-browser-like environment, which is not supported.\");\r\n    }\r\n    return new scene_1.Scene();\r\n});\r\nvar settings_1 = require(\"./settings\");\r\nObject.defineProperty(exports, \"settings\", { enumerable: true, get: function () { return settings_1.settings; } });\r\nvar particle_1 = require(\"./particles/particle\");\r\nObject.defineProperty(exports, \"Particle\", { enumerable: true, get: function () { return particle_1.Particle; } });\r\nvar emitter_1 = require(\"./particles/emitter\");\r\nObject.defineProperty(exports, \"Emitter\", { enumerable: true, get: function () { return emitter_1.Emitter; } });\r\nexports.variation = require(\"./systems/variation\");\r\nexports.sources = require(\"./systems/sources\");\r\nexports.random = require(\"./systems/random\");\r\nexports.math = require(\"./systems/math\");\r\nexports.util = require(\"./util\");\r\n/**\r\n * Forces the initialization of the otherwise lazy scene.\r\n */\r\nfunction forceInit() {\r\n    exports.scene.current;\r\n}\r\nexports.forceInit = forceInit;\r\nexports.default = require(\"./\");\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Scene = void 0;\r\nvar debug_1 = require(\"./debug\");\r\nvar emitter_1 = require(\"./particles/emitter\");\r\nvar renderer_1 = require(\"./particles/renderer\");\r\n/**\r\n * Represents a scene that contains emitters and their particles.\r\n *\r\n * Scenes are responsible for spawning and updating emitters, and\r\n * removing them once they are done.\r\n *\r\n * Scenes are not explicitely present in the DOM as an element, only\r\n * the contained particles are.\r\n */\r\nvar Scene = /** @class */ (function () {\r\n    /**\r\n     * Initializes a new scene and starts the ticking job.\r\n     */\r\n    function Scene() {\r\n        /**\r\n         * The emitters currently present in the scene.\r\n         */\r\n        this.emitters = [];\r\n        /**\r\n         * The debug instance associated with the scene.\r\n         */\r\n        this.debug = new debug_1.Debug(this);\r\n        /**\r\n         * The renderer associated with the scene.\r\n         */\r\n        this.renderer = new renderer_1.Renderer();\r\n        /**\r\n         * The ID of the currently scheduled tick.\r\n         */\r\n        this.scheduledTickId = undefined;\r\n        /**\r\n         * The timestamp of the last tick, used to calculate deltas.\r\n         *\r\n         * @initialValue `performance.now()` (time origin)\r\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp\r\n         */\r\n        this.lastTickTimestamp = performance.now();\r\n        // Ensure the scene context is preserved on the tick.\r\n        this.tick = this.tick.bind(this);\r\n        this.scheduleTick();\r\n    }\r\n    /**\r\n     * Creates and returns a new, default emitter object.\r\n     */\r\n    Scene.prototype.createEmitter = function (options) {\r\n        var emitter = new emitter_1.Emitter(options);\r\n        this.emitters.push(emitter);\r\n        return emitter;\r\n    };\r\n    /**\r\n     * Clears all emitters from the scene.\r\n     *\r\n     * @returns The number of cleared emitters.\r\n     */\r\n    Scene.prototype.clearEmitters = function () {\r\n        return this.emitters.splice(0).length;\r\n    };\r\n    /**\r\n     * Clears the particles from all emitters in the scene.\r\n     * Note that this does not remove the actual emitter objects though.\r\n     *\r\n     * @returns The number of cleared particles.\r\n     */\r\n    Scene.prototype.clearParticles = function () {\r\n        return this.emitters.reduce(function (sum, emitter) { return sum + emitter.clearParticles(); }, 0);\r\n    };\r\n    /**\r\n     * Schedules a tick in the scene.\r\n     */\r\n    Scene.prototype.scheduleTick = function () {\r\n        this.scheduledTickId = window.requestAnimationFrame(this.tick);\r\n    };\r\n    /**\r\n     * Cancels a pending tick operation.\r\n     */\r\n    Scene.prototype.cancelTick = function () {\r\n        window.cancelAnimationFrame(this.scheduledTickId);\r\n    };\r\n    /**\r\n     * Processes a tick cycle, updating all emitters contained in the scene.\r\n     * This is handled as a JS animation frame event, hence the passed timestamp.\r\n     *\r\n     * @remarks\r\n     * The emitter ticking and particle rendering is run using try-catch blocks,\r\n     * to ensure that we can recover from potential errors.\r\n     *\r\n     * @param timestamp The current timestamp of the animation frame.\r\n     */\r\n    Scene.prototype.tick = function (timestamp) {\r\n        // Calculate the elapsed delta and convert it to seconds.\r\n        var delta = (timestamp - this.lastTickTimestamp) / 1000;\r\n        try {\r\n            // Perform ticks for all the emitters in the scene.\r\n            for (var i = 0; i < this.emitters.length; i++) {\r\n                var emitter = this.emitters[i];\r\n                emitter.tick(delta);\r\n                if (emitter.isExpired && emitter.canRemove) {\r\n                    this.emitters.splice(i--, 1);\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(\"An error occurred while updating the scene's emitters:\\n\\\"\" + error + \"\\\"\");\r\n        }\r\n        try {\r\n            // Instruct the renderer to draw the particles of all systems.\r\n            this.renderer.begin();\r\n            for (var _i = 0, _a = this.emitters; _i < _a.length; _i++) {\r\n                var emitter = _a[_i];\r\n                for (var _b = 0, _c = emitter.particles; _b < _c.length; _b++) {\r\n                    var particle = _c[_b];\r\n                    this.renderer.renderParticle(particle, emitter);\r\n                }\r\n            }\r\n            this.renderer.end();\r\n        }\r\n        catch (error) {\r\n            console.error(\"An error occurred while rendering the scene's particles:\\n\\\"\" + error + \"\\\"\");\r\n        }\r\n        // Perform a tick on the debug interface\r\n        this.debug.tick(delta);\r\n        // Save the timestamp as the last tick timestamp and schedule a new tick.\r\n        this.lastTickTimestamp = timestamp;\r\n        this.scheduleTick();\r\n    };\r\n    return Scene;\r\n}());\r\nexports.Scene = Scene;\r\n","\"use strict\";\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Debug = void 0;\r\nvar containers_1 = require(\"./containers\");\r\nvar settings_1 = require(\"./settings\");\r\n/**\r\n * Represents a utility module to view debug information inside the DOM.\r\n * This is disabled by default and needs to manually be enabled by setting\r\n * the '.enabled' field to true.\r\n *\r\n * While disabled, the utility will not fetch stats and update itself.\r\n */\r\nvar Debug = /** @class */ (function () {\r\n    /**\r\n     * Registers a new debug utility that is attached to the given scene.\r\n     *\r\n     * @param scene The scene to attach to.\r\n     */\r\n    function Debug(scene) {\r\n        this.scene = scene;\r\n        /**\r\n         * The rate at which the debug interface should refresh itself (per second).\r\n         */\r\n        this.refreshRate = 8;\r\n        /**\r\n         * The timer counting down to refreshes.\r\n         */\r\n        this.refreshTimer = 1 / this.refreshRate;\r\n    }\r\n    /**\r\n     * Processes a tick event in the interface. This checks if enough has passed to\r\n     * trigger a refresh, and if so, fetches the debug information and updates the DOM.\r\n     *\r\n     * @param delta The time that has elapsed since the last tick.\r\n     */\r\n    Debug.prototype.tick = function (delta) {\r\n        var container = containers_1.debugContainer.current;\r\n        // If the current display style does not match the style inferred from the\r\n        // enabled-state, update it.\r\n        var displayStyle = settings_1.settings.debug ? \"block\" : \"none\";\r\n        if (container.style.display !== displayStyle) {\r\n            container.style.display = displayStyle;\r\n        }\r\n        if (!settings_1.settings.debug) {\r\n            // If the interface is not enabled, don't fetch or update any infos.\r\n            return;\r\n        }\r\n        this.refreshTimer += delta;\r\n        if (this.refreshTimer > 1 / this.refreshRate) {\r\n            this.refreshTimer = 0;\r\n            // Update the container with the fetched information joined on line breaks.\r\n            container.innerHTML = this.getDebugInformation(delta).join(\"<br>\");\r\n        }\r\n    };\r\n    /**\r\n     * Fetches the debug information from the specified delta and the linked scene.\r\n     *\r\n     * @returns An array of debugging information, formatted as HTML.\r\n     */\r\n    Debug.prototype.getDebugInformation = function (delta) {\r\n        // Count emitters and particles.\r\n        var emitters = this.scene.emitters.length;\r\n        var particles = this.scene.emitters.reduce(function (acc, cur) { return acc + cur.particles.length; }, 0);\r\n        var infos = [\r\n            \"<b>party.js Debug</b>\",\r\n            \"--------------\",\r\n            \"FPS: \" + Math.round(1 / delta),\r\n            \"Emitters: \" + emitters,\r\n            \"Particles: \" + particles,\r\n        ];\r\n        // Emitter informations are formatted using their index, internal timer\r\n        // and total particle count.\r\n        var emitterInfos = this.scene.emitters.map(function (emitter) {\r\n            return [\r\n                // Show the current loop and the total loops.\r\n                \"\\u2B6F: \" + (emitter[\"currentLoop\"] + 1) + \"/\" + (emitter.options.loops >= 0 ? emitter.options.loops : \"∞\"),\r\n                // Show the amount of particle contained.\r\n                \"\\u03A3p: \" + emitter.particles.length,\r\n                // Show the internal timer.\r\n                !emitter.isExpired\r\n                    ? \"\\u03A3t: \" + emitter[\"durationTimer\"].toFixed(3) + \"s\"\r\n                    : \"<i>expired</i>\",\r\n            ].join(\", \");\r\n        });\r\n        infos.push.apply(infos, __spreadArray([\"--------------\"], emitterInfos));\r\n        return infos;\r\n    };\r\n    return Debug;\r\n}());\r\nexports.Debug = Debug;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.particleContainer = exports.debugContainer = exports.rootContainer = void 0;\r\nvar settings_1 = require(\"./settings\");\r\nvar util_1 = require(\"./util\");\r\n/**\r\n * The prefix to apply to the containers.\r\n */\r\nvar containerPrefix = \"party-js-\";\r\n/**\r\n * Checks if the specified container is 'active', meaning not undefined and attached to the DOM.\r\n */\r\nfunction isContainerActive(container) {\r\n    return container && container.isConnected;\r\n}\r\n/**\r\n * A generic factory method for creating a DOM container. Prefixes the specified name with the\r\n * container prefix, applies the styles and adds it under the parent.\r\n */\r\nfunction makeContainer(name, styles, parent) {\r\n    var container = document.createElement(\"div\");\r\n    container.id = containerPrefix + name;\r\n    Object.assign(container.style, styles);\r\n    return parent.appendChild(container);\r\n}\r\n/**\r\n * Represents the root container for DOM elements of the library.\r\n */\r\nexports.rootContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"container\", {\r\n        position: \"fixed\",\r\n        left: \"0\",\r\n        top: \"0\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        pointerEvents: \"none\",\r\n        userSelect: \"none\",\r\n        zIndex: settings_1.settings.zIndex.toString(),\r\n    }, document.body);\r\n}, isContainerActive);\r\n/**\r\n * Represents the debugging container of the library, only active if debugging is enabled.\r\n */\r\nexports.debugContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"debug\", {\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        margin: \"0.5em\",\r\n        padding: \"0.5em 1em\",\r\n        border: \"2px solid rgb(0, 0, 0, 0.2)\",\r\n        background: \"rgb(0, 0, 0, 0.1)\",\r\n        color: \"#555\",\r\n        fontFamily: \"monospace\",\r\n    }, exports.rootContainer.current);\r\n}, isContainerActive);\r\n/**\r\n * Represents the particle container of the library.\r\n * This is where the particle DOM elements get rendered into.\r\n */\r\nexports.particleContainer = new util_1.Lazy(function () {\r\n    return makeContainer(\"particles\", {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        perspective: \"1200px\",\r\n    }, exports.rootContainer.current);\r\n}, isContainerActive);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.settings = void 0;\r\nexports.settings = {\r\n    debug: false,\r\n    gravity: 800,\r\n    zIndex: 99999,\r\n    respectReducedMotion: true,\r\n};\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./config\"), exports);\r\n__exportStar(require(\"./rotation\"), exports);\r\n__exportStar(require(\"./rules\"), exports);\r\n__exportStar(require(\"./lazy\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.overrideDefaults = void 0;\r\n/**\r\n * Replaces the supplied defaults with the properties specified in the overrides.\r\n * This returns a new object.\r\n */\r\nfunction overrideDefaults(defaults, overrides) {\r\n    return Object.assign({}, defaults, overrides);\r\n}\r\nexports.overrideDefaults = overrideDefaults;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rotationToNormal = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Converts the specified euler rotation (in degrees) into the corresponding normal vector.\r\n *\r\n * @remarks\r\n * The normal is calculated by placing a (figurative) plane in a coordinate-system's\r\n * origin, and rotating it by the specified angles. Note that the z-component of the\r\n * rotation is irrelevant for the normal and can be ignored. Then, two vectors\r\n * describing the orientation of the plane are calculated. Their cross product\r\n * denotes the normal vector.\r\n *\r\n * @param rotation The euler rotation angles (in degrees) to calculate the normal for.\r\n */\r\nfunction rotationToNormal(rotation) {\r\n    var alpha = rotation.x * math_1.deg2rad;\r\n    var beta = rotation.y * math_1.deg2rad;\r\n    var a = new components_1.Vector(Math.cos(beta), 0, Math.sin(beta));\r\n    var b = new components_1.Vector(0, Math.cos(alpha), Math.sin(alpha));\r\n    return a.cross(b);\r\n}\r\nexports.rotationToNormal = rotationToNormal;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./circle\"), exports);\r\n__exportStar(require(\"./color\"), exports);\r\n__exportStar(require(\"./gradient\"), exports);\r\n__exportStar(require(\"./numericSpline\"), exports);\r\n__exportStar(require(\"./rect\"), exports);\r\n__exportStar(require(\"./vector\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Circle = void 0;\r\n/**\r\n * Represents a circle.\r\n */\r\nvar Circle = /** @class */ (function () {\r\n    /**\r\n     * Creates a new circle at the specified coordinates, with a default radius of 0.\r\n     */\r\n    function Circle(x, y, radius) {\r\n        if (radius === void 0) { radius = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n    }\r\n    Circle.zero = new Circle(0, 0);\r\n    return Circle;\r\n}());\r\nexports.Circle = Circle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Color = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a color consisting of RGB values. The components of it are\r\n * represented as integers in the range 0 to 255.\r\n *\r\n * @example\r\n * ```ts\r\n * const a = new Color(12, 59, 219);\r\n * const b = Color.fromHex(\"#ffa68d\");\r\n * const result = a.mix(b);\r\n * ```\r\n */\r\nvar Color = /** @class */ (function () {\r\n    /**\r\n     * Creates a new color instance from the specified RGB components.\r\n     */\r\n    function Color(r, g, b) {\r\n        this.values = new Float32Array(3);\r\n        this.rgb = [r, g, b];\r\n    }\r\n    Object.defineProperty(Color.prototype, \"r\", {\r\n        /**\r\n         * Returns the r-component of the color.\r\n         */\r\n        get: function () {\r\n            return this.values[0];\r\n        },\r\n        /**\r\n         * Modifies the r-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        set: function (value) {\r\n            this.values[0] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"g\", {\r\n        /**\r\n         * Returns the g-component of the color.\r\n         */\r\n        get: function () {\r\n            return this.values[1];\r\n        },\r\n        /**\r\n         * Modifies the g-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        set: function (value) {\r\n            this.values[1] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"b\", {\r\n        /**\r\n         * Returns the b-component of the color.\r\n         * Note that this also floors the value.\r\n         */\r\n        get: function () {\r\n            return this.values[2];\r\n        },\r\n        /**\r\n         * Modifies the b-component of the color.\r\n         */\r\n        set: function (value) {\r\n            this.values[2] = Math.floor(value);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"rgb\", {\r\n        /**\r\n         * Returns the rgb-components of the color, bundled as a copied array.\r\n         */\r\n        get: function () {\r\n            return [this.r, this.g, this.b];\r\n        },\r\n        /**\r\n         * Simultaneously updates the rgb-components of the color, by passing an array.\r\n         */\r\n        set: function (values) {\r\n            this.r = values[0];\r\n            this.g = values[1];\r\n            this.b = values[2];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Mixes the two color together with an optional mixing weight.\r\n     * This weight is 0.5 by default, perfectly averaging the color.\r\n     */\r\n    Color.prototype.mix = function (color, weight) {\r\n        if (weight === void 0) { weight = 0.5; }\r\n        return new Color(math_1.lerp(this.r, color.r, weight), math_1.lerp(this.g, color.g, weight), math_1.lerp(this.b, color.b, weight));\r\n    };\r\n    /**\r\n     * Returns the hexadecimal representation of the color, prefixed by '#'.\r\n     */\r\n    Color.prototype.toHex = function () {\r\n        var hex = function (v) { return v.toString(16).padStart(2, \"0\"); };\r\n        return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\r\n    };\r\n    /**\r\n     * Returns a formatted representation of the color.\r\n     */\r\n    Color.prototype.toString = function () {\r\n        return \"rgb(\" + this.values.join(\", \") + \")\";\r\n    };\r\n    /**\r\n     * Creates a color from the specified hexadecimal string.\r\n     * This string can optionally be prefixed by '#'.\r\n     */\r\n    Color.fromHex = function (hex) {\r\n        if (hex.startsWith(\"#\")) {\r\n            hex = hex.substr(1);\r\n        }\r\n        return new Color(parseInt(hex.substr(0, 2), 16), parseInt(hex.substr(2, 2), 16), parseInt(hex.substr(4, 2), 16));\r\n    };\r\n    /**\r\n     * Creates a color from the specified HSL components.\r\n     *\r\n     * @see https://stackoverflow.com/a/9493060/5507624\r\n     */\r\n    Color.fromHsl = function (h, s, l) {\r\n        h /= 360;\r\n        s /= 100;\r\n        l /= 100;\r\n        if (s === 0) {\r\n            return new Color(l, l, l);\r\n        }\r\n        else {\r\n            var hue2rgb = function (p, q, t) {\r\n                if (t < 0)\r\n                    t += 1;\r\n                if (t > 1)\r\n                    t -= 1;\r\n                if (t < 1 / 6)\r\n                    return p + (q - p) * 6 * t;\r\n                if (t < 1 / 2)\r\n                    return q;\r\n                if (t < 2 / 3)\r\n                    return p + (q - p) * (2 / 3 - t) * 6;\r\n                return p;\r\n            };\r\n            var to255 = function (v) { return Math.min(255, 256 * v); };\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            return new Color(to255(hue2rgb(p, q, h + 1 / 3)), to255(hue2rgb(p, q, h)), to255(hue2rgb(p, q, h - 1 / 3)));\r\n        }\r\n    };\r\n    /**\r\n     * Returns (1, 1, 1).\r\n     */\r\n    Color.white = new Color(255, 255, 255);\r\n    /**\r\n     * Returns (0, 0, 0).\r\n     */\r\n    Color.black = new Color(0, 0, 0);\r\n    return Color;\r\n}());\r\nexports.Color = Color;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.approximately = exports.clamp = exports.invlerp = exports.slerp = exports.lerp = exports.epsilon = exports.rad2deg = exports.deg2rad = void 0;\r\n/**\r\n * Constant coefficient to convert degrees to radians.\r\n */\r\nexports.deg2rad = Math.PI / 180;\r\n/**\r\n * Constant coefficient to convert radians to degrees.\r\n */\r\nexports.rad2deg = 180 / Math.PI;\r\n/**\r\n * A small value to approximately compare values.\r\n */\r\nexports.epsilon = 0.000001;\r\n/**\r\n * Linearly interpolates between a and b by t.\r\n */\r\nfunction lerp(a, b, t) {\r\n    return (1 - t) * a + t * b;\r\n}\r\nexports.lerp = lerp;\r\n/**\r\n * Smoothly interpolates between a and b by t (using cosine interpolation).\r\n */\r\nfunction slerp(a, b, t) {\r\n    return lerp(a, b, (1 - Math.cos(t * Math.PI)) / 2);\r\n}\r\nexports.slerp = slerp;\r\n/**\r\n * Inversely lerps v between a and b to find t.\r\n */\r\nfunction invlerp(a, b, v) {\r\n    return (v - a) / (b - a);\r\n}\r\nexports.invlerp = invlerp;\r\n/**\r\n * Clamps the specified value between a minimum and a maximum.\r\n */\r\nfunction clamp(value, min, max) {\r\n    return Math.min(max, Math.max(min, value));\r\n}\r\nexports.clamp = clamp;\r\n/**\r\n * Checks if a is approximately equal to b.\r\n */\r\nfunction approximately(a, b) {\r\n    return Math.abs(a - b) < exports.epsilon;\r\n}\r\nexports.approximately = approximately;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Gradient = void 0;\r\nvar spline_1 = require(\"./spline\");\r\n/**\r\n * Represents a gradient that can be used to interpolate between multiple color.\r\n */\r\nvar Gradient = /** @class */ (function (_super) {\r\n    __extends(Gradient, _super);\r\n    function Gradient() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Interpolates between two color on the gradient.\r\n     */\r\n    Gradient.prototype.interpolate = function (a, b, t) {\r\n        return a.mix(b, t);\r\n    };\r\n    /**\r\n     * Returns a solid gradient from the given color.\r\n     */\r\n    Gradient.solid = function (color) {\r\n        return new Gradient({ value: color, time: 0.5 });\r\n    };\r\n    /**\r\n     * Returns a gradient with evenly spaced keys from the given colors.\r\n     */\r\n    Gradient.simple = function () {\r\n        var colors = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            colors[_i] = arguments[_i];\r\n        }\r\n        var step = 1 / (colors.length - 1);\r\n        return new (Gradient.bind.apply(Gradient, __spreadArray([void 0], colors.map(function (color, index) { return ({\r\n            value: color,\r\n            time: index * step,\r\n        }); }))))();\r\n    };\r\n    return Gradient;\r\n}(spline_1.Spline));\r\nexports.Gradient = Gradient;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Spline = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a spline that can be used to continueously evaluate a function\r\n * between keys. The base implementation is kept generic, so the functionality\r\n * can easily be implemented for similar constructs, such as gradients.\r\n */\r\nvar Spline = /** @class */ (function () {\r\n    /**\r\n     * Creates a new spline instance, using the specified keys.\r\n     * Note that you have to pass at least one key.\r\n     */\r\n    function Spline() {\r\n        var keys = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            keys[_i] = arguments[_i];\r\n        }\r\n        if (keys.length === 0) {\r\n            throw new Error(\"Splines require at least one key.\");\r\n        }\r\n        if (Array.isArray(keys[0])) {\r\n            throw new Error(\"You are trying to pass an array to the spline constructor, which is not supported. \" +\r\n                \"Try to spread the array into the constructor instead.\");\r\n        }\r\n        this.keys = keys;\r\n    }\r\n    /**\r\n     * Evaluates the spline at the given time.\r\n     */\r\n    Spline.prototype.evaluate = function (time) {\r\n        if (this.keys.length === 0) {\r\n            throw new Error(\"Attempt to evaluate a spline with no keys.\");\r\n        }\r\n        if (this.keys.length === 1) {\r\n            // The spline only contains one key, therefore is constant.\r\n            return this.keys[0].value;\r\n        }\r\n        // Sort the keys and figure out the first key above the passed time.\r\n        var ascendingKeys = this.keys.sort(function (a, b) { return a.time - b.time; });\r\n        var upperKeyIndex = ascendingKeys.findIndex(function (g) { return g.time > time; });\r\n        // If the found index is either 0 or -1, the specified time falls out\r\n        // of the range of the supplied keys. In that case, the value of the\r\n        // nearest applicant key is returned.\r\n        if (upperKeyIndex === 0) {\r\n            return ascendingKeys[0].value;\r\n        }\r\n        if (upperKeyIndex === -1) {\r\n            return ascendingKeys[ascendingKeys.length - 1].value;\r\n        }\r\n        // Otherwise, find the bounding keys, and extrapolate the time between\r\n        // the two. This is then used to interpolate between the two keys,\r\n        // using the provided implementation.\r\n        var lowerKey = ascendingKeys[upperKeyIndex - 1];\r\n        var upperKey = ascendingKeys[upperKeyIndex];\r\n        var containedTime = math_1.invlerp(lowerKey.time, upperKey.time, time);\r\n        return this.interpolate(lowerKey.value, upperKey.value, containedTime);\r\n    };\r\n    return Spline;\r\n}());\r\nexports.Spline = Spline;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NumericSpline = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\nvar spline_1 = require(\"./spline\");\r\n/**\r\n * Represents a spline that can take numeric values.\r\n */\r\nvar NumericSpline = /** @class */ (function (_super) {\r\n    __extends(NumericSpline, _super);\r\n    function NumericSpline() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Smoothly interpolates between two keys on the spline.\r\n     */\r\n    NumericSpline.prototype.interpolate = function (a, b, t) {\r\n        return math_1.slerp(a, b, t);\r\n    };\r\n    return NumericSpline;\r\n}(spline_1.Spline));\r\nexports.NumericSpline = NumericSpline;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Rect = void 0;\r\n/**\r\n * Represents a rectangle with an origin and size.\r\n */\r\nvar Rect = /** @class */ (function () {\r\n    function Rect(x, y, width, height) {\r\n        if (width === void 0) { width = 0; }\r\n        if (height === void 0) { height = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    /**\r\n     * Returns a new document-space rectangle from the viewport's bounds.\r\n     */\r\n    Rect.fromScreen = function () {\r\n        return new Rect(window.scrollX, window.scrollY, window.innerWidth, window.innerHeight);\r\n    };\r\n    /**\r\n     * Returns a new document-space rectangle from the specified element.\r\n     */\r\n    Rect.fromElement = function (element) {\r\n        var r = element.getBoundingClientRect();\r\n        return new Rect(window.scrollX + r.x, window.scrollY + r.y, r.width, r.height);\r\n    };\r\n    Rect.zero = new Rect(0, 0);\r\n    return Rect;\r\n}());\r\nexports.Rect = Rect;\r\n","\"use strict\";\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Vector = void 0;\r\nvar math_1 = require(\"../systems/math\");\r\n/**\r\n * Represents a structure used to process vectors.\r\n *\r\n * @remarks\r\n * Note that the operations in this class will **not** modify the original vector,\r\n * except for the property assignments. This is to ensure that vectors are not\r\n * unintentionally modified.\r\n *\r\n * @example\r\n * ```ts\r\n * const vectorA = new Vector(1, 3, 5);\r\n * const vectorB = new Vector(2, 3, 1);\r\n * const vectorC = vectorA.add(vectorB); // (3, 6, 6)\r\n * ```\r\n */\r\nvar Vector = /** @class */ (function () {\r\n    /**\r\n     * Creates a new vector with optional x-, y-, and z-components.\r\n     * Omitted components are defaulted to 0.\r\n     */\r\n    function Vector(x, y, z) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        if (z === void 0) { z = 0; }\r\n        this.values = new Float32Array(3);\r\n        this.xyz = [x, y, z];\r\n    }\r\n    Object.defineProperty(Vector.prototype, \"x\", {\r\n        /**\r\n         * Returns the x-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[0];\r\n        },\r\n        /**\r\n         * Modifies the x-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[0] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"y\", {\r\n        /**\r\n         * Returns the y-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[1];\r\n        },\r\n        /**\r\n         * Modifies the y-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[1] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"z\", {\r\n        /**\r\n         * Returns the z-component of the vector.\r\n         */\r\n        get: function () {\r\n            return this.values[2];\r\n        },\r\n        /**\r\n         * Modifies the z-component of the vector.\r\n         */\r\n        set: function (value) {\r\n            this.values[2] = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector.prototype, \"xyz\", {\r\n        /**\r\n         * Returns the xyz-components of the vector, bundled as a copied array.\r\n         */\r\n        get: function () {\r\n            return [this.x, this.y, this.z];\r\n        },\r\n        /**\r\n         * Simultaneously updates the xyz-components of the vector, by passing an array.\r\n         */\r\n        set: function (values) {\r\n            this.values[0] = values[0];\r\n            this.values[1] = values[1];\r\n            this.values[2] = values[2];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the length of the vector.\r\n     */\r\n    Vector.prototype.magnitude = function () {\r\n        return Math.sqrt(this.sqrMagnitude());\r\n    };\r\n    /**\r\n     * Returns the squared length of the vector.\r\n     */\r\n    Vector.prototype.sqrMagnitude = function () {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    };\r\n    /**\r\n     * Adds the two vectors together, component-wise.\r\n     */\r\n    Vector.prototype.add = function (vector) {\r\n        return new Vector(this.x + vector.x, this.y + vector.y, this.z + vector.z);\r\n    };\r\n    /**\r\n     * Subtracts the right vector from the left one, component-wise.\r\n     */\r\n    Vector.prototype.subtract = function (vector) {\r\n        return new Vector(this.x - vector.x, this.y - vector.y, this.z - vector.z);\r\n    };\r\n    /**\r\n     * Scales the lefthand vector by another vector or by a number.\r\n     */\r\n    Vector.prototype.scale = function (scalar) {\r\n        if (typeof scalar === \"number\") {\r\n            return new Vector(this.x * scalar, this.y * scalar, this.z * scalar);\r\n        }\r\n        else {\r\n            return new Vector(this.x * scalar.x, this.y * scalar.y, this.z * scalar.z);\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes the vector to a length of 1. If the length was previously zero,\r\n     * then a zero-length vector will be returned.\r\n     */\r\n    Vector.prototype.normalized = function () {\r\n        var magnitude = this.magnitude();\r\n        if (magnitude !== 0) {\r\n            return this.scale(1 / magnitude);\r\n        }\r\n        return new (Vector.bind.apply(Vector, __spreadArray([void 0], this.xyz)))();\r\n    };\r\n    /**\r\n     * Returns the angle between two vectors, in degrees.\r\n     */\r\n    Vector.prototype.angle = function (vector) {\r\n        return (math_1.rad2deg *\r\n            Math.acos((this.x * vector.x + this.y * vector.y + this.z * vector.z) /\r\n                (this.magnitude() * vector.magnitude())));\r\n    };\r\n    /**\r\n     * Returns the cross-product of two vectors.\r\n     */\r\n    Vector.prototype.cross = function (vector) {\r\n        return new Vector(this.y * vector.z - this.z * vector.y, this.z * vector.x - this.x * vector.z, this.x * vector.y - this.y * vector.x);\r\n    };\r\n    /**\r\n     * returns the dot-product of two vectors.\r\n     */\r\n    Vector.prototype.dot = function (vector) {\r\n        return (this.magnitude() *\r\n            vector.magnitude() *\r\n            Math.cos(math_1.deg2rad * this.angle(vector)));\r\n    };\r\n    /**\r\n     * Returns a formatted representation of the vector.\r\n     */\r\n    Vector.prototype.toString = function () {\r\n        return \"Vector(\" + this.values.join(\", \") + \")\";\r\n    };\r\n    /**\r\n     * Creates a new vector from an angle, in degrees. Note that the z-component will be zero.\r\n     */\r\n    Vector.from2dAngle = function (angle) {\r\n        return new Vector(Math.cos(angle * math_1.deg2rad), Math.sin(angle * math_1.deg2rad));\r\n    };\r\n    /**\r\n     * Returns (0, 0, 0).\r\n     */\r\n    Vector.zero = new Vector(0, 0, 0);\r\n    /**\r\n     * Returns (1, 1, 1).\r\n     */\r\n    Vector.one = new Vector(1, 1, 1);\r\n    /**\r\n     * Returns (1, 0, 0).\r\n     */\r\n    Vector.right = new Vector(1, 0, 0);\r\n    /**\r\n     * Returns (0, 1, 0).\r\n     */\r\n    Vector.up = new Vector(0, 1, 0);\r\n    /**\r\n     * Returns (0, 0, 1).\r\n     */\r\n    Vector.forward = new Vector(0, 0, 1);\r\n    return Vector;\r\n}());\r\nexports.Vector = Vector;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.despawningRules = void 0;\r\n/**\r\n * Contains a set of pre-defined particle despawning rules.\r\n */\r\nexports.despawningRules = {\r\n    /**\r\n     * A rule that despawns a particle once its lifetime is over.\r\n     */\r\n    lifetime: function (particle) {\r\n        return particle.lifetime <= 0;\r\n    },\r\n    /**\r\n     * A rule that despawns a particle once its y-coordinate is outside of the document.\r\n     */\r\n    bounds: function (particle) {\r\n        // Get document height: https://stackoverflow.com/a/44077777/5507624\r\n        var height = document.documentElement.scrollHeight;\r\n        return particle.location.y > height;\r\n    },\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Lazy = void 0;\r\n/**\r\n * A wrapper class to lazily initialize a value.\r\n * Supports custom factory and predicate methods.\r\n */\r\nvar Lazy = /** @class */ (function () {\r\n    function Lazy(factory, exists) {\r\n        if (exists === void 0) { exists = Lazy.defaultExists; }\r\n        this.factory = factory;\r\n        this.exists = exists;\r\n    }\r\n    Object.defineProperty(Lazy.prototype, \"current\", {\r\n        /**\r\n         * The current value of the lazy object. Will be initialized, if the 'exists'\r\n         * predicate doesn't match.\r\n         */\r\n        get: function () {\r\n            if (!this.exists(this.value)) {\r\n                this.value = this.factory();\r\n            }\r\n            return this.value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Lazy.defaultExists = function (value) {\r\n        return typeof value !== \"undefined\";\r\n    };\r\n    return Lazy;\r\n}());\r\nexports.Lazy = Lazy;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Emitter = void 0;\r\nvar vector_1 = require(\"../components/vector\");\r\nvar settings_1 = require(\"../settings\");\r\nvar variation_1 = require(\"../systems/variation\");\r\nvar config_1 = require(\"../util/config\");\r\nvar options_1 = require(\"./options\");\r\nvar particle_1 = require(\"./particle\");\r\n/**\r\n * Represents an emitter that is responsible for spawning and updating particles.\r\n *\r\n * Particles themselves are just data-holders, with the system acting upon them and\r\n * modifying them. The modifications are done mainly via modules, that use the\r\n * particle's data together with some function to apply temporal transitions.\r\n *\r\n * @see Particle\r\n * @see ParticleModifierModule\r\n */\r\nvar Emitter = /** @class */ (function () {\r\n    /**\r\n     * Creates a new emitter, using default options.\r\n     */\r\n    function Emitter(options) {\r\n        /**\r\n         * The particles currently contained within the system.\r\n         */\r\n        this.particles = [];\r\n        this.currentLoop = 0; // The current loop index.\r\n        this.durationTimer = 0; // Measures the current runtime duration, to allow loops to reset.\r\n        this.emissionTimer = 0; // Measures the current emission timer, to allow spawning particles in intervals.\r\n        this.attemptedBurstIndices = []; // The indices of the particle bursts that were attempted this loop.\r\n        this.options = config_1.overrideDefaults(options_1.getDefaultEmitterOptions(), options === null || options === void 0 ? void 0 : options.emitterOptions);\r\n        this.emission = config_1.overrideDefaults(options_1.getDefaultEmissionOptions(), options === null || options === void 0 ? void 0 : options.emissionOptions);\r\n        this.renderer = config_1.overrideDefaults(options_1.getDefaultRendererOptions(), options === null || options === void 0 ? void 0 : options.rendererOptions);\r\n    }\r\n    Object.defineProperty(Emitter.prototype, \"isExpired\", {\r\n        /**\r\n         * Checks if the emitter is already expired and can be removed.\r\n         * Expired emitters do not emit new particles.\r\n         */\r\n        get: function () {\r\n            return (this.options.loops >= 0 && this.currentLoop >= this.options.loops);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Emitter.prototype, \"canRemove\", {\r\n        /**\r\n         * Checks if the emitter can safely be removed.\r\n         * This is true if no more particles are active.\r\n         */\r\n        get: function () {\r\n            return this.particles.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clears all particles inside the emitter.\r\n     *\r\n     * @returns The number of cleared particles.\r\n     */\r\n    Emitter.prototype.clearParticles = function () {\r\n        return this.particles.splice(0).length;\r\n    };\r\n    /**\r\n     * Processes a tick of the emitter, using the elapsed time.\r\n     *\r\n     * @remarks\r\n     * This handles a few things, namely:\r\n     * - Incrementing the duration timer and potentially incrementing the loop.\r\n     * - Handling particle bursts & emissions.\r\n     * - Despawning particles conditionally.\r\n     *\r\n     * @param delta The time, in seconds, passed since the last tick.\r\n     */\r\n    Emitter.prototype.tick = function (delta) {\r\n        if (!this.isExpired) {\r\n            this.durationTimer += delta;\r\n            if (this.durationTimer >= this.options.duration) {\r\n                this.currentLoop++;\r\n                // To start a new loop, the duration timer and attempted bursts are reset.\r\n                this.durationTimer = 0;\r\n                this.attemptedBurstIndices = [];\r\n            }\r\n            // We need to check the expiry again, in case the added loop or duration changed something.\r\n            if (!this.isExpired) {\r\n                // Iterate over the bursts, attempting to execute them if the time is ready.\r\n                var burstIndex = 0;\r\n                for (var _i = 0, _a = this.emission.bursts; _i < _a.length; _i++) {\r\n                    var burst = _a[_i];\r\n                    if (burst.time <= this.durationTimer) {\r\n                        // Has the burst already been attempted? If not ...\r\n                        if (!this.attemptedBurstIndices.includes(burstIndex)) {\r\n                            // Perform the burst, emitting a variable amount of particles.\r\n                            var count = variation_1.evaluateVariation(burst.count);\r\n                            for (var i = 0; i < count; i++) {\r\n                                this.emitParticle();\r\n                            }\r\n                            // Mark the burst as attempted.\r\n                            this.attemptedBurstIndices.push(burstIndex);\r\n                        }\r\n                    }\r\n                    burstIndex++;\r\n                }\r\n                // Handle the 'emission over time'. By using a while-loop instead of a simple\r\n                // if-condition, we take high deltas into account, and ensure that the correct\r\n                // number of particles will consistently be emitted.\r\n                this.emissionTimer += delta;\r\n                var delay = 1 / this.emission.rate;\r\n                while (this.emissionTimer > delay) {\r\n                    this.emissionTimer -= delay;\r\n                    this.emitParticle();\r\n                }\r\n            }\r\n        }\r\n        var _loop_1 = function (i) {\r\n            var particle = this_1.particles[i];\r\n            this_1.tickParticle(particle, delta);\r\n            // Particles should be despawned (i.e. removed from the collection) if any of\r\n            // the despawning rules apply to them.\r\n            if (this_1.options.despawningRules.some(function (rule) { return rule(particle); })) {\r\n                this_1.particles.splice(i, 1);\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = this.particles.length - 1; i >= 0; i--) {\r\n            _loop_1(i);\r\n        }\r\n    };\r\n    /**\r\n     * Performs an internal tick for the particle.\r\n     *\r\n     * @remarks\r\n     * This method controls the particle's lifetime, location and velocity, according\r\n     * to the elapsed delta and the configuration. Additionally, each of the emitter's\r\n     * modules is applied to the particle.\r\n     *\r\n     * @param particle The particle to apply the tick for.\r\n     * @param delta The time, in seconds, passed since the last tick.\r\n     */\r\n    Emitter.prototype.tickParticle = function (particle, delta) {\r\n        particle.lifetime -= delta;\r\n        if (this.options.useGravity) {\r\n            // Apply gravitational acceleration to the particle.\r\n            particle.velocity = particle.velocity.add(vector_1.Vector.up.scale(settings_1.settings.gravity * delta));\r\n        }\r\n        // Apply the particle's velocity to its location.\r\n        particle.location = particle.location.add(particle.velocity.scale(delta));\r\n        // Apply the modules to the particle.\r\n        for (var _i = 0, _a = this.options.modules; _i < _a.length; _i++) {\r\n            var moduleFunction = _a[_i];\r\n            moduleFunction(particle);\r\n        }\r\n    };\r\n    /**\r\n     * Emits a particle using the registered settings.\r\n     * Also may despawn a particle if the maximum number of particles is exceeded.\r\n     */\r\n    Emitter.prototype.emitParticle = function () {\r\n        var particle = new particle_1.Particle({\r\n            location: this.emission.sourceSampler(),\r\n            lifetime: variation_1.evaluateVariation(this.emission.initialLifetime),\r\n            velocity: vector_1.Vector.from2dAngle(variation_1.evaluateVariation(this.emission.angle)).scale(variation_1.evaluateVariation(this.emission.initialSpeed)),\r\n            size: variation_1.evaluateVariation(this.emission.initialSize),\r\n            rotation: variation_1.evaluateVariation(this.emission.initialRotation),\r\n            color: variation_1.evaluateVariation(this.emission.initialColor),\r\n        });\r\n        this.particles.push(particle);\r\n        // Ensure that no more particles than 'maxParticles' can exist.\r\n        if (this.particles.length > this.options.maxParticles) {\r\n            this.particles.shift();\r\n        }\r\n        return particle;\r\n    };\r\n    return Emitter;\r\n}());\r\nexports.Emitter = Emitter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.gradientSample = exports.splineSample = exports.skewRelative = exports.skew = exports.range = exports.evaluateVariation = void 0;\r\nvar random_1 = require(\"./random\");\r\n/**\r\n * Returns a value instance of a variation.\r\n */\r\nfunction evaluateVariation(variation) {\r\n    if (Array.isArray(variation))\r\n        return random_1.pick(variation);\r\n    if (typeof variation === \"function\")\r\n        return variation();\r\n    return variation;\r\n}\r\nexports.evaluateVariation = evaluateVariation;\r\n/**\r\n * Creates a variation function that returns a random number from min to max.\r\n */\r\nfunction range(min, max) {\r\n    return function () { return random_1.randomRange(min, max); };\r\n}\r\nexports.range = range;\r\n/**\r\n * Creates a variation function that skews the specified value by a specified, absolute\r\n * amount. This means that instead of the value itself, a random number that deviates\r\n * at most by the specified amount is returned.\r\n *\r\n * @remarks\r\n * If you want to skew by a percentage instead, use `skewRelative`.\r\n */\r\nfunction skew(value, amount) {\r\n    return function () { return value + random_1.randomRange(-amount, amount); };\r\n}\r\nexports.skew = skew;\r\n/**\r\n * Creates a variation function that skews the specified value by a specified percentage.\r\n * This means that instead of the value itself, a random number that deviates by a maximum\r\n * of the specified percentage is returned.\r\n */\r\nfunction skewRelative(value, percentage) {\r\n    return function () { return value * (1 + random_1.randomRange(-percentage, percentage)); };\r\n}\r\nexports.skewRelative = skewRelative;\r\n/**\r\n * Creates a variation function that returns a random sample from the given spline.\r\n *\r\n * @param spline The spline to sample from.\r\n */\r\nfunction splineSample(spline) {\r\n    return function () { return spline.evaluate(Math.random()); };\r\n}\r\nexports.splineSample = splineSample;\r\n/**\r\n * Creates a variation function that returns a random sample from the given gradient.\r\n *\r\n * @remarks\r\n * This function is an alias for the spline variation, since a gradient is just\r\n * a spline under the hood.\r\n *\r\n * @param gradient The gradient to sample from.\r\n */\r\nfunction gradientSample(gradient) {\r\n    return splineSample(gradient);\r\n}\r\nexports.gradientSample = gradientSample;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.randomInsideCircle = exports.randomInsideRect = exports.randomUnitVector = exports.pick = exports.randomRange = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar math_1 = require(\"./math\");\r\n/**\r\n * Returns a random value from min to max.\r\n */\r\nfunction randomRange(min, max) {\r\n    if (min === void 0) { min = 0; }\r\n    if (max === void 0) { max = 1; }\r\n    return math_1.lerp(min, max, Math.random());\r\n}\r\nexports.randomRange = randomRange;\r\n/**\r\n * Picks a random element from the specified array. Returns undefined if the array is empty.\r\n */\r\nfunction pick(arr) {\r\n    return arr.length === 0\r\n        ? undefined\r\n        : arr[Math.floor(Math.random() * arr.length)];\r\n}\r\nexports.pick = pick;\r\n/**\r\n * Returns a random unit vector.\r\n */\r\nfunction randomUnitVector() {\r\n    var theta = randomRange(0, 2 * Math.PI);\r\n    var z = randomRange(-1, 1);\r\n    return new components_1.Vector(Math.sqrt(1 - z * z) * Math.cos(theta), Math.sqrt(1 - z * z) * Math.sin(theta), z);\r\n}\r\nexports.randomUnitVector = randomUnitVector;\r\n/**\r\n * Returns a random point inside the given rect.\r\n */\r\nfunction randomInsideRect(rect) {\r\n    return new components_1.Vector(rect.x + randomRange(0, rect.width), rect.y + randomRange(0, rect.height));\r\n}\r\nexports.randomInsideRect = randomInsideRect;\r\nfunction randomInsideCircle(circle) {\r\n    var theta = randomRange(0, 2 * Math.PI);\r\n    var radius = randomRange(0, circle.radius);\r\n    return new components_1.Vector(circle.x + Math.cos(theta) * radius, circle.y + Math.sin(theta) * radius);\r\n}\r\nexports.randomInsideCircle = randomInsideCircle;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./emitterOptions\"), exports);\r\n__exportStar(require(\"./emissionOptions\"), exports);\r\n__exportStar(require(\"./renderOptions\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultEmitterOptions = void 0;\r\nvar rules_1 = require(\"../../util/rules\");\r\n/**\r\n * Returns the default set of emitter options.\r\n */\r\nfunction getDefaultEmitterOptions() {\r\n    return {\r\n        duration: 5,\r\n        loops: 1,\r\n        useGravity: true,\r\n        maxParticles: 300,\r\n        despawningRules: [rules_1.despawningRules.lifetime, rules_1.despawningRules.bounds],\r\n        modules: [],\r\n    };\r\n}\r\nexports.getDefaultEmitterOptions = getDefaultEmitterOptions;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultEmissionOptions = void 0;\r\nvar components_1 = require(\"../../components\");\r\nvar sources_1 = require(\"../../systems/sources\");\r\n/**\r\n * Returns the default set of emission options.\r\n */\r\nfunction getDefaultEmissionOptions() {\r\n    return {\r\n        rate: 10,\r\n        angle: 0,\r\n        bursts: [],\r\n        sourceSampler: sources_1.rectSource(components_1.Rect.zero),\r\n        initialLifetime: 5,\r\n        initialSpeed: 5,\r\n        initialSize: 1,\r\n        initialRotation: components_1.Vector.zero,\r\n        initialColor: components_1.Color.white,\r\n    };\r\n}\r\nexports.getDefaultEmissionOptions = getDefaultEmissionOptions;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.circleSource = exports.rectSource = exports.mouseSource = exports.elementSource = exports.dynamicSource = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar random_1 = require(\"./random\");\r\n/**\r\n * Dynamically infers a source sampler for the specified source type.\r\n */\r\nfunction dynamicSource(source) {\r\n    if (source instanceof HTMLElement) {\r\n        return elementSource(source);\r\n    }\r\n    if (source instanceof components_1.Circle) {\r\n        return circleSource(source);\r\n    }\r\n    if (source instanceof components_1.Rect) {\r\n        return rectSource(source);\r\n    }\r\n    if (source instanceof MouseEvent) {\r\n        return mouseSource(source);\r\n    }\r\n    throw new Error(\"Cannot infer the source type of '\" + source + \"'.\");\r\n}\r\nexports.dynamicSource = dynamicSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified HTMLElement.\r\n */\r\nfunction elementSource(source) {\r\n    return function () { return random_1.randomInsideRect(components_1.Rect.fromElement(source)); };\r\n}\r\nexports.elementSource = elementSource;\r\n/**\r\n * Creates a sampler to retrieve the position of a mouse event.\r\n */\r\nfunction mouseSource(source) {\r\n    return function () {\r\n        return new components_1.Vector(window.scrollX + source.clientX, window.scrollY + source.clientY);\r\n    };\r\n}\r\nexports.mouseSource = mouseSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified rectangle.\r\n */\r\nfunction rectSource(source) {\r\n    return function () { return random_1.randomInsideRect(source); };\r\n}\r\nexports.rectSource = rectSource;\r\n/**\r\n * Creates a sampler to retrieve random points inside a specified circle.\r\n */\r\nfunction circleSource(source) {\r\n    return function () { return random_1.randomInsideCircle(source); };\r\n}\r\nexports.circleSource = circleSource;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultRendererOptions = void 0;\r\n/**\r\n * Returns the default set of renderer options.\r\n */\r\nfunction getDefaultRendererOptions() {\r\n    return {\r\n        shapeFactory: \"square\",\r\n        applyColor: defaultApplyColor,\r\n        applyOpacity: defaultApplyOpacity,\r\n        applyLighting: defaultApplyLighting,\r\n        applyTransform: defaultApplyTransform,\r\n    };\r\n}\r\nexports.getDefaultRendererOptions = getDefaultRendererOptions;\r\n/**\r\n * Applies the specified color to the element.\r\n *\r\n * @remarks\r\n * This function is aware of the element's node type:\r\n * - `div` elements have their `background` set.\r\n * - `svg` elements have their `fill` and `color` set.\r\n * - Other elements have their `color` set.\r\n */\r\nfunction defaultApplyColor(color, element) {\r\n    var hex = color.toHex();\r\n    // Note that by default, HTML node names are uppercase.\r\n    switch (element.nodeName.toLowerCase()) {\r\n        case \"div\":\r\n            element.style.background = hex;\r\n            break;\r\n        case \"svg\":\r\n            element.style.fill = element.style.color = hex;\r\n            break;\r\n        default:\r\n            element.style.color = hex;\r\n            break;\r\n    }\r\n}\r\n/**\r\n * Applies the specified opacity to the element.\r\n */\r\nfunction defaultApplyOpacity(opacity, element) {\r\n    element.style.opacity = opacity.toString();\r\n}\r\n/**\r\n * Applies the specified lighting to the element as a brightness filter.\r\n *\r\n * @remarks\r\n * This function assumes an ambient light with intensity 0.5, and that the\r\n * particle should be lit from both sides. The brightness filter can exceed 1,\r\n * to give the particles a \"glossy\" feel.\r\n */\r\nfunction defaultApplyLighting(lighting, element) {\r\n    element.style.filter = \"brightness(\" + (0.5 + Math.abs(lighting)) + \")\";\r\n}\r\n/**\r\n * Applies the specified transform to the element as a 3D CSS transform.\r\n * Also takes into account the current window scroll, to make sure that particles are\r\n * rendered inside of the fixed container.\r\n */\r\nfunction defaultApplyTransform(particle, element) {\r\n    element.style.transform =\r\n        // Make sure to take window scrolling into account.\r\n        \"translateX(\" + (particle.location.x - window.scrollX).toFixed(3) + \"px) \" +\r\n            (\"translateY(\" + (particle.location.y - window.scrollY).toFixed(3) + \"px) \") +\r\n            (\"translateZ(\" + particle.location.z.toFixed(3) + \"px) \") +\r\n            (\"rotateX(\" + particle.rotation.x.toFixed(3) + \"deg) \") +\r\n            (\"rotateY(\" + particle.rotation.y.toFixed(3) + \"deg) \") +\r\n            (\"rotateZ(\" + particle.rotation.z.toFixed(3) + \"deg) \") +\r\n            (\"scale(\" + particle.size.toFixed(3) + \")\");\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Particle = void 0;\r\nvar components_1 = require(\"../components\");\r\nvar config_1 = require(\"../util/config\");\r\n/**\r\n * Represents an emitted particle.\r\n */\r\nvar Particle = /** @class */ (function () {\r\n    /**\r\n     * Creates a new particle instance through the specified options.\r\n     */\r\n    function Particle(options) {\r\n        var populatedOptions = config_1.overrideDefaults({\r\n            lifetime: 0,\r\n            size: 1,\r\n            location: components_1.Vector.zero,\r\n            rotation: components_1.Vector.zero,\r\n            velocity: components_1.Vector.zero,\r\n            color: components_1.Color.white,\r\n            opacity: 1,\r\n        }, options);\r\n        // Generate a symbolic ID.\r\n        this.id = Symbol();\r\n        // Assign various properties, together with some initials for later reference.\r\n        this.size = this.initialSize = populatedOptions.size;\r\n        this.lifetime = this.initialLifetime = populatedOptions.lifetime;\r\n        this.rotation = this.initialRotation = populatedOptions.rotation;\r\n        this.location = populatedOptions.location;\r\n        this.velocity = populatedOptions.velocity;\r\n        this.color = populatedOptions.color;\r\n        this.opacity = populatedOptions.opacity;\r\n    }\r\n    return Particle;\r\n}());\r\nexports.Particle = Particle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Renderer = void 0;\r\nvar __1 = require(\"..\");\r\nvar vector_1 = require(\"../components/vector\");\r\nvar containers_1 = require(\"../containers\");\r\nvar shapes_1 = require(\"../systems/shapes\");\r\nvar util_1 = require(\"../util\");\r\n/**\r\n * Represents a renderer used to draw particles to the DOM via HTML\r\n * elements. Additionally, it is responsible for purging the elements\r\n * of destroyed particles from the DOM.\r\n */\r\nvar Renderer = /** @class */ (function () {\r\n    function Renderer() {\r\n        /**\r\n         * The lookup of elements currently handled by the renderer, with the\r\n         * particle ID as key and a HTMLElement as the value.\r\n         */\r\n        this.elements = new Map();\r\n        /**\r\n         * The normalized direction the light comes from.\r\n         */\r\n        this.light = new vector_1.Vector(0, 0, 1);\r\n        /**\r\n         * Whether or not the renderer should actually draw particles.\r\n         */\r\n        this.enabled = true;\r\n        // Respect that users might prefer reduced motion.\r\n        // See: https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\r\n        this.enabled =\r\n            !__1.settings.respectReducedMotion ||\r\n                !window.matchMedia(\"(prefers-reduced-motion)\").matches;\r\n    }\r\n    /**\r\n     * Begins a new render block. During the rendering phase, a list of rendered particles\r\n     * is tracked, so that stale particles can be removed later.\r\n     */\r\n    Renderer.prototype.begin = function () {\r\n        this.renderedParticles = [];\r\n    };\r\n    /**\r\n     * Terminates an existing render block. This checks which particles were rendered\r\n     * during the block and purges all unused HTMLElements from the DOM.\r\n     *\r\n     * @returns The amount of particles that were rendered.\r\n     */\r\n    Renderer.prototype.end = function () {\r\n        var it = this.elements.keys();\r\n        var result = it.next();\r\n        while (!result.done) {\r\n            var id = result.value;\r\n            if (!this.renderedParticles.includes(id)) {\r\n                this.elements.get(id).remove();\r\n                this.elements.delete(id);\r\n            }\r\n            result = it.next();\r\n        }\r\n        return this.renderedParticles.length;\r\n    };\r\n    /**\r\n     * Renders an individual particle to the DOM. If the particle is rendered for the first\r\n     * time, a HTMLElement will be created using the emitter's render settings.\r\n     *\r\n     * @param particle The particle to be rendered.\r\n     * @param emitter The system containing the particle.\r\n     */\r\n    Renderer.prototype.renderParticle = function (particle, emitter) {\r\n        if (!this.enabled)\r\n            return;\r\n        var options = emitter.renderer;\r\n        // Ensure that an element for the particle exists.\r\n        var element = this.elements.has(particle.id)\r\n            ? this.elements.get(particle.id)\r\n            : this.createParticleElement(particle, options);\r\n        if (options.applyColor) {\r\n            // If the options offer a coloring method, apply it.\r\n            options.applyColor(particle.color, element);\r\n        }\r\n        if (options.applyOpacity) {\r\n            // If the options offer an opacity modifying method, apply it.\r\n            options.applyOpacity(particle.opacity, element);\r\n        }\r\n        if (options.applyLighting) {\r\n            // If the options offer a lighting method, apply it.\r\n            // Lighting is calculated as a combination of the particle's normal\r\n            // direction and the lighting direction.\r\n            var normal = util_1.rotationToNormal(particle.rotation);\r\n            var lightingCoefficient = normal.dot(this.light);\r\n            options.applyLighting(lightingCoefficient, element);\r\n        }\r\n        if (options.applyTransform) {\r\n            // If the options offer a transformation method, apply it.\r\n            // This ensures the particle is rendered at the correct position with the correct rotation.\r\n            options.applyTransform(particle, element);\r\n        }\r\n        // Mark the particle as rendered.\r\n        this.renderedParticles.push(particle.id);\r\n    };\r\n    /**\r\n     * Creates the HTMLElement for a particle that does not have one already.\r\n     */\r\n    Renderer.prototype.createParticleElement = function (particle, options) {\r\n        // Resolve the element returned from the factory.\r\n        var resolved = shapes_1.resolveShapeFactory(options.shapeFactory);\r\n        // Clone the node to ensure we do not break existing elements.\r\n        var element = resolved.cloneNode(true);\r\n        // Ensure that the elements can be \"stacked\" ontop of eachother.\r\n        element.style.position = \"absolute\";\r\n        // Register the new element in the map, while appending the new element to the DOM.\r\n        this.elements.set(particle.id, containers_1.particleContainer.current.appendChild(element));\r\n        return element;\r\n    };\r\n    return Renderer;\r\n}());\r\nexports.Renderer = Renderer;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.resolveShapeFactory = exports.resolvableShapes = void 0;\r\nvar variation_1 = require(\"./variation\");\r\n/**\r\n * Represents the lookup that maps resolveable element keys to their HTML strings.\r\n *\r\n * @remarks\r\n * The default shapes are made to fit inside a dimension of 10x10 pixels, except\r\n * the 'star' shape, which exceeds it slightly.\r\n */\r\nexports.resolvableShapes = {\r\n    square: \"<div style=\\\"height: 10px; width: 10px;\\\"></div>\",\r\n    rectangle: \"<div style=\\\"height: 6px; width: 10px;\\\"></div>\",\r\n    circle: \"<svg viewBox=\\\"0 0 2 2\\\" width=\\\"10\\\" height=\\\"10\\\"><circle cx=\\\"1\\\" cy=\\\"1\\\" r=\\\"1\\\" fill=\\\"currentColor\\\"/></svg>\",\r\n    roundedSquare: \"<div style=\\\"height: 10px; width: 10px; border-radius: 3px;\\\"></div>\",\r\n    roundedRectangle: \"<div style=\\\"height: 6px; width: 10px; border-radius: 3px;\\\"></div>\",\r\n    star: \"<svg viewBox=\\\"0 0 512 512\\\" width=\\\"15\\\" height=\\\"15\\\"><polygon fill=\\\"currentColor\\\" points=\\\"512,197.816 325.961,185.585 255.898,9.569 185.835,185.585 0,197.816 142.534,318.842 95.762,502.431 255.898,401.21 416.035,502.431 369.263,318.842\\\"/></svg>\",\r\n};\r\n/**\r\n * Resolves the specified element factory using the resolvable elements, if needed.\r\n */\r\nfunction resolveShapeFactory(factory) {\r\n    // Retrieve the unresolved element from the factory.\r\n    var shape = variation_1.evaluateVariation(factory);\r\n    // If a string is returned, we need to resolve the element. This means\r\n    // looking up the string in the resolver lookup. If the key was not\r\n    // resolvable, we throw an error.\r\n    if (typeof shape === \"string\") {\r\n        var resolved = exports.resolvableShapes[shape];\r\n        if (!resolved) {\r\n            throw new Error(\"Failed to resolve shape key '\" + shape + \"'. Did you forget to add it to the 'resolvableShapes' lookup?\");\r\n        }\r\n        // We're in luck, we can resolve the element! We create a dummy <div> element\r\n        // to set the innerHTML of, and return the first element child.\r\n        var dummy = document.createElement(\"div\");\r\n        dummy.innerHTML = resolved;\r\n        return dummy.firstElementChild;\r\n    }\r\n    return shape;\r\n}\r\nexports.resolveShapeFactory = resolveShapeFactory;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./confetti\"), exports);\r\n__exportStar(require(\"./sparkles\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.confetti = void 0;\r\nvar __1 = require(\"../\");\r\nvar components_1 = require(\"../components\");\r\nvar modules_1 = require(\"../systems/modules\");\r\nvar random = require(\"../systems/random\");\r\nvar sources = require(\"../systems/sources\");\r\nvar variation = require(\"../systems/variation\");\r\nvar util = require(\"../util\");\r\n/**\r\n * The standard confetti template.\r\n *\r\n * @param source The source to emit the confetti from.\r\n * @param options The (optional) configuration overrides.\r\n */\r\nfunction confetti(source, options) {\r\n    var populated = util.overrideDefaults({\r\n        count: variation.range(20, 40),\r\n        spread: variation.range(35, 45),\r\n        speed: variation.range(300, 600),\r\n        size: variation.skew(1, 0.2),\r\n        rotation: function () { return random.randomUnitVector().scale(180); },\r\n        color: function () { return components_1.Color.fromHsl(random.randomRange(0, 360), 100, 70); },\r\n        modules: [\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"size\")\r\n                .by(function (t) { return Math.min(1, t * 3); })\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"rotation\")\r\n                .by(function (t) { return new components_1.Vector(140, 200, 260).scale(t); })\r\n                .relative()\r\n                .build(),\r\n        ],\r\n        shapes: [\"square\", \"circle\"],\r\n    }, options);\r\n    var emitter = __1.scene.current.createEmitter({\r\n        emitterOptions: {\r\n            loops: 1,\r\n            duration: 8,\r\n            modules: populated.modules,\r\n        },\r\n        emissionOptions: {\r\n            rate: 0,\r\n            bursts: [{ time: 0, count: populated.count }],\r\n            sourceSampler: sources.dynamicSource(source),\r\n            angle: variation.skew(-90, variation.evaluateVariation(populated.spread)),\r\n            initialLifetime: 8,\r\n            initialSpeed: populated.speed,\r\n            initialSize: populated.size,\r\n            initialRotation: populated.rotation,\r\n            initialColor: populated.color,\r\n        },\r\n        rendererOptions: {\r\n            shapeFactory: populated.shapes,\r\n        },\r\n    });\r\n    return emitter;\r\n}\r\nexports.confetti = confetti;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ModuleBuilder = void 0;\r\nvar components_1 = require(\"../components\");\r\n/**\r\n * Represents a builder for particle modules. Returns an evaluatable module\r\n * function, that can be consumed by emitters.\r\n *\r\n * @remarks\r\n * Not all properties can be driven. TypeScript will validate this at compile time,\r\n * but no internal validation is performed due to performance reasons. Also, note\r\n * that the driving factor is \"lifetime\" by default.\r\n *\r\n * @example\r\n * ```ts\r\n * new ModuleBuilder()\r\n *     .drive(\"size\")\r\n *     .by((t) => t * 2)\r\n *     .through(\"lifetime\")\r\n *     .build();\r\n * ```\r\n */\r\nvar ModuleBuilder = /** @class */ (function () {\r\n    function ModuleBuilder() {\r\n        /**\r\n         * The factor driving the built function.\r\n         *\r\n         * @defaultValue \"lifetime\"\r\n         */\r\n        this.factor = \"lifetime\";\r\n        this.isRelative = false;\r\n    }\r\n    /**\r\n     * Specifies the key in the particle that should be driven.\r\n     *\r\n     * @remarks\r\n     * Note that not all of a particle's properties are drivable through modules. If you\r\n     * need full control of a particle inside of a module, you can use a module function directly.\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.drive = function (key) {\r\n        this.driverKey = key;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies the factor to drive the evaluated value by. Supports \"lifetime\" and \"size\".\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.through = function (factor) {\r\n        this.factor = factor;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies the value to drive the module behaviour by. This can be a constant,\r\n     * a spline or an evaluable function. Note that in the last case, the driving\r\n     * factor is passed as a parameter.\r\n     *\r\n     * @returns The chained builder instance.\r\n     */\r\n    ModuleBuilder.prototype.by = function (driver) {\r\n        this.driverValue = driver;\r\n        return this;\r\n    };\r\n    /**\r\n     * Specifies that the module function is supposed to act relative to the\r\n     * properties initial value.\r\n     *\r\n     * @remarks\r\n     * Note that this is only possible if an \"initial*\" property exists on the\r\n     * particle object. The operation applied to the initial and new value\r\n     * is dependant on their type:\r\n     * - `Vector`: Both vectors are added.\r\n     * - `number`: Both numbers are multiplied.\r\n     *\r\n     * For more advanced relative customizations, consider using the particle\r\n     * object in the driver value function instead, like:\r\n     * ```ts\r\n     * .by((t, p) => p.initialSize + t * 2);\r\n     * ```\r\n     */\r\n    ModuleBuilder.prototype.relative = function (isRelative) {\r\n        if (isRelative === void 0) { isRelative = true; }\r\n        this.isRelative = isRelative;\r\n        return this;\r\n    };\r\n    /**\r\n     * Consumes the builder and returns an evaluatable module function.\r\n     *\r\n     * @remarks\r\n     * Note that you need to specify the driving key and value, otherwise an error\r\n     * will be thrown.\r\n     */\r\n    ModuleBuilder.prototype.build = function () {\r\n        var _this = this;\r\n        if (typeof this.driverKey === \"undefined\") {\r\n            throw new Error(\"No driving key was provided in the module builder. Did you forget a '.drive()' call?\");\r\n        }\r\n        if (typeof this.driverValue === \"undefined\") {\r\n            throw new Error(\"No driving value was provided in the module builder. Did you forget a '.through()' call?\");\r\n        }\r\n        return function (particle) {\r\n            updateDrivenProperty(particle, _this.driverKey, evaluateModuleDriver(_this.driverValue, calculateModuleFactor(_this.factor, particle), particle), _this.isRelative);\r\n        };\r\n    };\r\n    return ModuleBuilder;\r\n}());\r\nexports.ModuleBuilder = ModuleBuilder;\r\n/**\r\n * Evaluates the module driver using a specified factor.\r\n */\r\nfunction evaluateModuleDriver(driver, factor, particle) {\r\n    if (typeof driver === \"object\" && \"evaluate\" in driver) {\r\n        return driver.evaluate(factor);\r\n    }\r\n    if (typeof driver === \"function\") {\r\n        return driver(factor, particle);\r\n    }\r\n    return driver;\r\n}\r\n/**\r\n * Calculates a module factor using a specified particle as context.\r\n */\r\nfunction calculateModuleFactor(factor, particle) {\r\n    switch (factor) {\r\n        case \"lifetime\":\r\n            return particle.initialLifetime - particle.lifetime;\r\n        case \"relativeLifetime\":\r\n            return ((particle.initialLifetime - particle.lifetime) /\r\n                particle.initialLifetime);\r\n        case \"size\":\r\n            return particle.size;\r\n        default:\r\n            throw new Error(\"Invalid driving factor '\" + factor + \"'.\");\r\n    }\r\n}\r\n/**\r\n * Updates a driven property of a particle using the specified value.\r\n *\r\n * @remarks\r\n * If the operation is marked as relative, the function infers the new value\r\n * through the value's type. Note that relative properties must have a\r\n * corresponding \"initial*\" value in the particle's properties.\r\n */\r\nfunction updateDrivenProperty(particle, key, value, relative) {\r\n    if (relative === void 0) { relative = false; }\r\n    if (!relative) {\r\n        particle[key] = value;\r\n    }\r\n    else {\r\n        var initial = particle[\"initial\" + key[0].toUpperCase() + key.substr(1)];\r\n        if (typeof initial === \"undefined\") {\r\n            throw new Error(\"Unable to use relative chaining with key '\" + key + \"'; no initial value exists.\");\r\n        }\r\n        if (value instanceof components_1.Vector) {\r\n            updateDrivenProperty(particle, key, initial.add(value));\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            updateDrivenProperty(particle, key, initial * value);\r\n        }\r\n        else {\r\n            throw new Error(\"Unable to use relative chaining with particle key '\" + key + \"'; no relative operation for '\" + value + \"' could be inferred.\");\r\n        }\r\n    }\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.sparkles = void 0;\r\nvar __1 = require(\"..\");\r\nvar components_1 = require(\"../components\");\r\nvar modules_1 = require(\"../systems/modules\");\r\nvar random = require(\"../systems/random\");\r\nvar sources = require(\"../systems/sources\");\r\nvar variation = require(\"../systems/variation\");\r\nvar util = require(\"../util\");\r\n/**\r\n * The standard sparkles template.\r\n *\r\n * @param source The source to emit the sparkles from.\r\n * @param options The (optional) configuration overrides.\r\n */\r\nfunction sparkles(source, options) {\r\n    var populated = util.overrideDefaults({\r\n        lifetime: variation.range(1, 2),\r\n        count: variation.range(10, 20),\r\n        speed: variation.range(100, 200),\r\n        size: variation.range(0.8, 1.8),\r\n        rotation: function () { return new components_1.Vector(0, 0, random.randomRange(0, 360)); },\r\n        color: function () { return components_1.Color.fromHsl(50, 100, random.randomRange(55, 85)); },\r\n        modules: [\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"rotation\")\r\n                .by(function (t) { return new components_1.Vector(0, 0, 200).scale(t); })\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"size\")\r\n                .by(new components_1.NumericSpline({ time: 0, value: 0 }, { time: 0.3, value: 1 }, { time: 0.7, value: 1 }, { time: 1, value: 0 }))\r\n                .through(\"relativeLifetime\")\r\n                .relative()\r\n                .build(),\r\n            new modules_1.ModuleBuilder()\r\n                .drive(\"opacity\")\r\n                .by(new components_1.NumericSpline({ time: 0, value: 1 }, { time: 0.5, value: 1 }, { time: 1, value: 0 }))\r\n                .through(\"relativeLifetime\")\r\n                .build(),\r\n        ],\r\n        shapes: \"star\",\r\n    }, options);\r\n    var emitter = __1.scene.current.createEmitter({\r\n        emitterOptions: {\r\n            loops: 1,\r\n            duration: 3,\r\n            useGravity: false,\r\n            modules: populated.modules,\r\n        },\r\n        emissionOptions: {\r\n            rate: 0,\r\n            bursts: [{ time: 0, count: populated.count }],\r\n            sourceSampler: sources.dynamicSource(source),\r\n            angle: variation.range(0, 360),\r\n            initialLifetime: populated.lifetime,\r\n            initialSpeed: populated.speed,\r\n            initialSize: populated.size,\r\n            initialRotation: populated.rotation,\r\n            initialColor: populated.color,\r\n        },\r\n        rendererOptions: {\r\n            applyLighting: undefined,\r\n            shapeFactory: populated.shapes,\r\n        },\r\n    });\r\n    return emitter;\r\n}\r\nexports.sparkles = sparkles;\r\n","import party from \"party-js\";\nimport { choose, shuffle } from \"./helpers\";\n\nconst usp = new URLSearchParams(location.search);\nconst letters = usp.get(\"letters\")?.split(\",\") ?? [];\nconst letterCase = usp.get(\"case\")?.split(\",\") ?? [];\nconst family = usp.get(\"family\")?.split(\",\") ?? [];\nconst style = usp.get(\"style\")?.split(\",\") ?? [];\n\nlet currentIndex = 0;\nlet lettersSet = shuffle(letters);\n\nconst appContainer = document.getElementById(\"app\")!;\nconst progressBar = document.querySelector(\"progress\")!;\n\nfunction renderLetter() {\n  appContainer.textContent = \"\";\n\n  const letterButton = document.createElement(\"button\");\n  letterButton.textContent = lettersSet[currentIndex];\n  letterButton.classList.add(choose(letterCase));\n  letterButton.classList.add(choose(family));\n  letterButton.classList.add(choose(style));\n\n  letterButton.addEventListener(\"click\", () => {\n    const utterance = new SpeechSynthesisUtterance(letterButton.textContent);\n    speechSynthesis.speak(utterance);\n  });\n\n  appContainer.appendChild(letterButton);\n\n  const buttonsContainer = document.createElement(\"div\");\n  buttonsContainer.classList.add(\"buttons-container\");\n\n  const incorrectButton = document.createElement(\"button\");\n  incorrectButton.textContent = \"✘\";\n  incorrectButton.addEventListener(\"click\", () => {\n    lettersSet.push(lettersSet[currentIndex]);\n    currentIndex++;\n    renderLetter();\n  });\n\n  buttonsContainer.appendChild(incorrectButton);\n\n  const correctButton = document.createElement(\"button\");\n  correctButton.textContent = \"✔️\";\n  correctButton.addEventListener(\"click\", () => {\n    currentIndex++;\n    if (currentIndex >= lettersSet.length) {\n      currentIndex = 0;\n      lettersSet = shuffle(lettersSet);\n    }\n    progressBar.value = parseInt(progressBar.value) + 1;\n    if (progressBar.value == 5) {\n      party.confetti(appContainer, {\n        count: party.variation.range(50, 100),\n        size: party.variation.range(1, 2),\n      });\n      // Timeout to let the browser paint at 5 first\n      setTimeout(() => {\n        progressBar.value = 0;\n        renderLetter();\n      }, 2400); // About the duration of the confetti animation\n    } else {\n      renderLetter();\n    }\n  });\n\n  buttonsContainer.appendChild(correctButton);\n\n  appContainer.appendChild(buttonsContainer);\n}\n\nrenderLetter();\n","// https://stackoverflow.com/a/2450976/8486161\nexport function shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex != 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n}\n\nexport function choose(array) {\n  return array[Math.floor(Math.random() * array.length)];\n}\n"],"names":["$4100499228b73440$var$__createBinding","module","exports","__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","$4100499228b73440$var$__exportStar","__exportStar","exports1","p","prototype","hasOwnProperty","call","value","default","forceInit","util","math","random","sources","variation","Emitter","Particle","settings","scene","parcelRequire","Lazy","document","window","Error","$7FS7F","Scene","$giDX8","$9504u","$hTpvv","current","$59665861aa1d0693$var$Scene","this","emitters","debug","$3PydK","Debug","renderer","$d06HG","Renderer","scheduledTickId","lastTickTimestamp","performance","now","tick","bind","scheduleTick","createEmitter","options","push","emitter","clearEmitters","splice","length","clearParticles","reduce","sum","requestAnimationFrame","cancelTick","$2ca0ae0984c6786e$var$__spreadArray","__spreadArray","to","from","i","il","j","$2ca0ae0984c6786e$var$Debug","refreshRate","refreshTimer","delta","container","$76ES7","debugContainer","displayStyle","style","display","innerHTML","getDebugInformation","join","particles","acc","cur","infos","Math","round","particleContainer","rootContainer","$52c8cc455d9a1421$var$isContainerActive","isConnected","$52c8cc455d9a1421$var$makeContainer","name","styles","parent","createElement","id","assign","appendChild","$31LFg","position","left","top","height","width","pointerEvents","userSelect","zIndex","toString","body","margin","padding","border","background","color","gravity","respectReducedMotion","$23467044ab2a9467$var$__createBinding","$23467044ab2a9467$var$__exportStar","overrideDefaults","defaults","overrides","rotationToNormal","$9ee6e9c93953c218$var$__createBinding","$9ee6e9c93953c218$var$__exportStar","Circle","$4c94a3349ae67d31$var$Circle","x","y","radius","Color","$dd0c17c4cb33c479$var$Color","r","g","b","values","Float32Array","rgb","set","floor","configurable","mix","weight","$gVTF6","lerp","toHex","hex","v","padStart","$c53d2583437e0e83$var$lerp","a","t","approximately","clamp","invlerp","slerp","epsilon","rad2deg","deg2rad","PI","cos","extendStatics","$f709e09850e5d397$var$__extends","__extends","d","setPrototypeOf","__proto__","Array","TypeError","String","__","constructor","$f709e09850e5d397$var$__spreadArray","Gradient","$f709e09850e5d397$var$Gradient","_super","apply","arguments","interpolate","solid","time","simple","_i","colors","step","map","index","Spline","$c6f863968dd45636$var$Spline","keys","isArray","evaluate","ascendingKeys","sort","upperKeyIndex","findIndex","$15804dea62bf2069$var$__extends","NumericSpline","$15804dea62bf2069$var$NumericSpline","Rect","$a785f6424194afe4$var$Rect","fromScreen","scrollX","scrollY","innerWidth","innerHeight","fromElement","element","getBoundingClientRect","$4bb49d90a8b2319a$var$__spreadArray","Vector","z","xyz","magnitude","sqrt","sqrMagnitude","add","vector","despawningRules","lifetime","particle","$178cf851533c414e$var$Lazy","factory","exists","defaultExists","$d06b5bef59a40ddc$var$Emitter","currentLoop","durationTimer","emissionTimer","attemptedBurstIndices","$2OsQY","$6LEXJ","getDefaultEmitterOptions","emitterOptions","emission","getDefaultEmissionOptions","emissionOptions","getDefaultRendererOptions","rendererOptions","loops","duration","isExpired","burstIndex","_a","bursts","burst","includes","count","$gZIWH","evaluateVariation","emitParticle","delay","rate","_loop_1","this_1","tickParticle","some","rule","gradientSample","splineSample","skewRelative","skew","range","$eiIs5","pick","min","max","randomRange","amount","percentage","randomInsideCircle","randomInsideRect","randomUnitVector","$a6953a64e32074a1$var$randomRange","arr","theta","$dDPyP","sin","rect","$4ed6e82ace476e2e$var$__createBinding","$4ed6e82ace476e2e$var$__exportStar","useGravity","$aKD1R","bounds","modules","angle","sourceSampler","$6GJU0","rectSource","zero","initialLifetime","initialSpeed","initialSize","initialRotation","initialColor","white","circleSource","mouseSource","elementSource","dynamicSource","$4dea45958129f6aa$var$elementSource","source","$4dea45958129f6aa$var$mouseSource","clientX","clientY","$4dea45958129f6aa$var$rectSource","HTMLElement","$4dea45958129f6aa$var$circleSource","MouseEvent","$90ce1f33ee1cbbda$var$defaultApplyColor","nodeName","toLowerCase","fill","shapeFactory","applyColor","applyOpacity","$90ce1f33ee1cbbda$var$defaultApplyOpacity","applyLighting","$90ce1f33ee1cbbda$var$defaultApplyLighting","applyTransform","$90ce1f33ee1cbbda$var$defaultApplyTransform","$69c4a2d9f14bd1f7$var$Particle","populatedOptions","size","location","rotation","velocity","opacity","Symbol","$977079a1043e4fec$var$Renderer","elements","Map","light","$6uYGk","enabled","$5zZXT","matchMedia","matches","begin","renderedParticles","end","it","result","next","done","remove","delete","renderParticle","has","createParticleElement","resolveShapeFactory","resolvableShapes","square","rectangle","circle","roundedSquare","roundedRectangle","star","shape","resolved","$4fa9b802d88e7434$var$__createBinding","$4fa9b802d88e7434$var$__exportStar","confetti","populated","speed","scale","fromHsl","$8PzjS","ModuleBuilder","drive","by","relative","build","shapes","spread","$66de7be0e80844ee$var$ModuleBuilder","factor","isRelative","key","driverKey","through","driver","driverValue","sparkles","$3c260e55dc652601$export$448332262467e042","array","randomIndex","currentIndex","$3c260e55dc652601$export$7877a478dd30fd3d","$9929fa07729a08b5$var$usp","URLSearchParams","search","$9929fa07729a08b5$var$letters","split","$9929fa07729a08b5$var$letterCase","$9929fa07729a08b5$var$family","$9929fa07729a08b5$var$style","$9929fa07729a08b5$var$currentIndex","$9929fa07729a08b5$var$lettersSet","$9929fa07729a08b5$var$appContainer","getElementById","$9929fa07729a08b5$var$progressBar","querySelector","$9929fa07729a08b5$var$renderLetter","textContent","letterButton","classList","addEventListener","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","buttonsContainer","incorrectButton","correctButton","parseInt","$parcel$interopDefault","setTimeout"],"version":3,"file":"practice.b35ab5a8.js.map"}